// <auto-generated />
using System;
using Lab4MVC;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Lab4MVC.Migrations
{
    [DbContext(typeof(AppLibContext))]
    partial class AppLibContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Lab4MVC.Models.Books", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BookName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            Author = "J.R.R.Tolkien",
                            BookName = "Hobbit",
                            ISBN = "9789113084893"
                        },
                        new
                        {
                            BookId = 2,
                            Author = "J.R.R.Tolkien",
                            BookName = "The Two Towers",
                            ISBN = "9780261102361"
                        },
                        new
                        {
                            BookId = 3,
                            Author = "J.R.R.Tolkien",
                            BookName = "The Return of the King",
                            ISBN = "9780261102378"
                        },
                        new
                        {
                            BookId = 4,
                            Author = "J.R.R.Tolkien",
                            BookName = "The Fall of Gondolin",
                            ISBN = "9780008302757"
                        },
                        new
                        {
                            BookId = 5,
                            Author = "J.K.Rowling",
                            BookName = "Harry Potter and the Philosopher's Stone",
                            ISBN = "9781408855652"
                        },
                        new
                        {
                            BookId = 6,
                            Author = "J.K.Rowling",
                            BookName = "Harry Potter and the Chamber of Secrets",
                            ISBN = "9781408855669"
                        },
                        new
                        {
                            BookId = 7,
                            Author = "J.K.Rowling",
                            BookName = "Harry Potter and the Chamber of Secrets",
                            ISBN = "9781408855669"
                        },
                        new
                        {
                            BookId = 8,
                            Author = "J. K. Rowling",
                            BookName = "Harry Potter and the Half-Blood Prince",
                            ISBN = "9781408855706"
                        });
                });

            modelBuilder.Entity("Lab4MVC.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(17)")
                        .HasMaxLength(17);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            FirstName = "Tony",
                            Gender = "Male",
                            LastName = "Stark",
                            PhoneNumber = "0701231233"
                        },
                        new
                        {
                            CustomerId = 2,
                            FirstName = "Natalia",
                            Gender = "Female",
                            LastName = "Romanoff",
                            PhoneNumber = "0703332222"
                        },
                        new
                        {
                            CustomerId = 3,
                            FirstName = "Bruce",
                            Gender = "Male",
                            LastName = "Banner",
                            PhoneNumber = "07044422233"
                        },
                        new
                        {
                            CustomerId = 4,
                            FirstName = "Wanda",
                            Gender = "Female",
                            LastName = "Maximoff",
                            PhoneNumber = "0701113332"
                        },
                        new
                        {
                            CustomerId = 5,
                            FirstName = "Thor",
                            Gender = "Male",
                            LastName = "Odinson",
                            PhoneNumber = "0701337133"
                        });
                });

            modelBuilder.Entity("Lab4MVC.Models.LinkTable", b =>
                {
                    b.Property<int>("LinkTableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Returned")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("LinkTableId");

                    b.HasIndex("BookId");

                    b.HasIndex("CustomerId");

                    b.ToTable("LinkTables");

                    b.HasData(
                        new
                        {
                            LinkTableId = 1,
                            BookId = 1,
                            CustomerId = 1,
                            EndDate = new DateTime(2022, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Returned = true,
                            StartDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            LinkTableId = 2,
                            BookId = 8,
                            CustomerId = 1,
                            EndDate = new DateTime(2022, 3, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Returned = true,
                            StartDate = new DateTime(2022, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            LinkTableId = 3,
                            BookId = 7,
                            CustomerId = 2,
                            EndDate = new DateTime(2022, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Returned = true,
                            StartDate = new DateTime(2021, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            LinkTableId = 4,
                            BookId = 6,
                            CustomerId = 2,
                            EndDate = new DateTime(2021, 7, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Returned = false,
                            StartDate = new DateTime(2021, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            LinkTableId = 5,
                            BookId = 5,
                            CustomerId = 3,
                            EndDate = new DateTime(2020, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Returned = true,
                            StartDate = new DateTime(2020, 6, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            LinkTableId = 6,
                            BookId = 4,
                            CustomerId = 3,
                            EndDate = new DateTime(2021, 12, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Returned = false,
                            StartDate = new DateTime(2021, 3, 24, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            LinkTableId = 7,
                            BookId = 3,
                            CustomerId = 4,
                            EndDate = new DateTime(2021, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Returned = true,
                            StartDate = new DateTime(2021, 7, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            LinkTableId = 8,
                            BookId = 1,
                            CustomerId = 5,
                            EndDate = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Returned = true,
                            StartDate = new DateTime(2021, 9, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            LinkTableId = 9,
                            BookId = 2,
                            CustomerId = 5,
                            EndDate = new DateTime(2021, 8, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Returned = false,
                            StartDate = new DateTime(2021, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            LinkTableId = 10,
                            BookId = 3,
                            CustomerId = 5,
                            EndDate = new DateTime(2021, 8, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Returned = true,
                            StartDate = new DateTime(2021, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            LinkTableId = 11,
                            BookId = 4,
                            CustomerId = 5,
                            EndDate = new DateTime(2022, 7, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Returned = false,
                            StartDate = new DateTime(2022, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            LinkTableId = 12,
                            BookId = 5,
                            CustomerId = 5,
                            EndDate = new DateTime(2022, 8, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Returned = false,
                            StartDate = new DateTime(2021, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            LinkTableId = 13,
                            BookId = 6,
                            CustomerId = 5,
                            EndDate = new DateTime(2022, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Returned = true,
                            StartDate = new DateTime(2022, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            LinkTableId = 14,
                            BookId = 7,
                            CustomerId = 5,
                            EndDate = new DateTime(2015, 1, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Returned = true,
                            StartDate = new DateTime(2012, 2, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            LinkTableId = 15,
                            BookId = 8,
                            CustomerId = 5,
                            EndDate = new DateTime(2027, 2, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Returned = true,
                            StartDate = new DateTime(2014, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Lab4MVC.Models.LinkTable", b =>
                {
                    b.HasOne("Lab4MVC.Models.Books", "Books")
                        .WithMany("LinkTables")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab4MVC.Models.Customer", "Customer")
                        .WithMany("LinkTables")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
